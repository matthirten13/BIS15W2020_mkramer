library(tidyverse)
library(naniar)
library(shiny)
library(shinydashboard)
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
goose <- readr::read_csv("data/Goose_data_2019.csv")
dim(goose)
glimpse(goose)
goose %>%
naniar::miss_var_summary()
names(goose)<-gsub("\\s","_",names(goose))#Put_in names
names(goose)<-gsub("#","Number",names(goose))
goose <- goose %>%
mutate_at(vars(Band_Number,Species,Common_Name,Age,Sex,Bander_ID,Location,How_Captured,Transmitter_Affixed,Cloacal_Swab,Blood_Sample_Taken, Transmitter_ID,Aux_Marker_Type,Season), as.factor)
goose <- goose %>%
mutate_at(vars(Wing_Chord, Bird_Weight, Tarsus_Length, Culmen_Length, Bill_Width, Bill_Height), as.numeric)
goose_mean <- goose %>%
group_by(Common_Name, Sex) %>%
summarize(Wing__Chord = mean(Wing_Chord, na.rm=T),
Bird__Weight = mean(Bird_Weight, na.rm=T),
Tarsus__Length = mean(Tarsus_Length, na.rm=T),
Culmen__Length = mean(Culmen_Length, na.rm=T),
Bill__Width = mean(Bill_Width, na.rm=T),
Bill__Height = mean(Bill_Height, na.rm=T)) %>%
pivot_longer(Wing__Chord:Bill__Height,
names_to = "Measure",
values_to = "Value")
goose_mean
ui <- fluidPage(
titlePanel("Goose Data by Sex"),
sidebarLayout(
sidebarPanel(
selectInput("Common_Name", "Select a Goose Species:",
choices=unique(goose_mean$Common_Name)),
selectInput("Measure", "Select a Measurement",
choices = unique(goose_mean$Measure)),
hr(),
helpText("Credit: Goose data collected by A. Mott")
),
mainPanel(
plotOutput("goosePlot")
)
)
)
server <- function(input, output, session) {
output$goosePlot <- renderPlot({
goose_mean %>%
filter(Common_Name == input$Common_Name & Measure == input$Measure) %>%
ggplot(aes(x=Sex, y=Value, fill = Sex)) +
geom_bar(stat = "identity")
})
}
shinyApp(ui, server)
runApp('Project_App_1.R')
runApp('Project_App_1.R')
install.packages(c("ape", "rentrez", "seqinr"))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ape)
library(seqinr)
?read.GenBank()
dengueseq <- read.GenBank("NC_001477")
dengueseq
dengueseq$NC_001477
dengueseq <- read.GenBank("NC_001477", as.character = TRUE)
dengueseq
lizards_accession_numbers <- c("JF806202", "HM161150", "FJ356743", "JF806205", "JQ073190", 	"GU457971", "FJ356741", "JF806207", "JF806210", "AY662592", "AY662591","FJ356748", "JN112660",  "AY662594", "JN112661", "HQ876437", "HQ876434", "AY662590", "FJ356740","JF806214", "JQ073188", "FJ356749", "JQ073189", "JF806216", "AY662598", "JN112653", "JF806204","FJ356747", "FJ356744", "HQ876440", "JN112651", "JF806215","JF806209")
lizards_sequences <- read.GenBank(lizards_accession_numbers)
lizards_sequences
str(lizards_sequences)
attributes(lizards_sequences)
names(lizards_sequences)
attr(lizards_sequences, "species")
lizards_sequences_GenBank_IDs <- paste(attr(lizards_sequences, "species"), names(lizards_sequences), sep ="_RAG1_")
lizards_sequences_GenBank_IDs
write.dna(lizards_sequences, file ="lizard_fasta_1.fasta", format = "fasta", append = FALSE, nbcol = 6, colsep = " ", colw = 10)
#install.packages("rentrez")
library(rentrez)
entrez_search(db="nuccore", term= "Basiliscus basiliscus[Organism] AND coi[GENE]", retmax=40)
lizard_search <- entrez_search(db="nuccore", term= "Basiliscus basiliscus[Organism]", retmax=40)
lizard_search
lizard_seqs <- entrez_fetch(db="nuccore", id=lizard_search$ids, rettype="fasta")
lizard_seqs
write(lizard_seqs, "data/lizard_fasta_2.fasta", sep = "\n")
write(lizard_seqs, "data/lizard_fasta_2.fasta", sep = "\n")
write(lizard_seqs, "data/lizard_fasta_2.fasta", sep = "\n")
entrez_search(db="nuccore", term= "Canis lupus familiaris[Organism] AND Dalmatian", retmax=10)
dalmatian_search <- entrez_search(db="nuccore", term= "Canis lupus familiaris[Organism] AND Dalmatian", retmax=10)
dalmatian_seqs <-entrez_fetch(db="nuccore", id=dalmatian_search$ids, rettype="fasta")
dalmatian_seqs
write(dalmatian_seqs, "data/dalmatian_sequences.fasta", sep = "/n")
runApp('Project_App_1.R')
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library("seqinr")
library("ape")
dengueseq <- read.GenBank("NC_001477", as.character = TRUE)
dengueseq
write.fasta(names="DEN-1", sequences=dengueseq, file.out="data/den1.fasta")
dengue <- read.fasta(file = "data/den1.fasta")
View(dengue)
dengueseq <- dengue[[1]]
length(dengueseq)
table(dengueseq)
GC(dengueseq)
lizseq <- read.GenBank("AY662598", as.character = T)
lizseq
lizseq <- read.GenBank("AY662598", as.character = T)
write.fasta(names="LIZ-1", sequences=lizseq, file.out="data/liz1.fasta")
lizseq <- read.fasta(file = "data/liz1.fasta")
lizseq <- read.GenBank("AY662598", as.character = T)
write.fasta(names="LIZ-1", sequences=lizseq, file.out="data/liz1.fasta")
lizard <- read.fasta(file = "data/liz1.fasta")
lizseq <- lizard[[1]]
length(lizard)
length(lizseq)
table(lizseq)
GC(lizseq)
runApp('Project_App_1.R')
runApp('Project_App_1.R')
runApp('Project_App_1.R')
#COI sequences for 8 species of louse
louse <- read.alignment(system.file("sequences/louse.fasta", package = "seqinr"), format = "fasta")
louse$nam
#COI sequences for each louse's gopher host
gopher <- read.alignment(system.file("sequences/gopher.fasta", package = "seqinr"), format = "fasta")
gopher$nam
#COI sequences for 8 species of louse
louse <- readlines(system.file("sequences/louse.fasta", package = "seqinr"), format = "fasta")
l.names <- readLines(system.file("sequences/louse.names", package = "seqinr"))
l.names
g.names <- readLines(system.file("sequences/gopher.names", package = "seqinr"))
g.names
louse.JC <- dist.dna(as.DNAbin(louse), model = "JC69")
gopher.JC <- dist.dna(as.DNAbin(gopher), model = "JC69")
l <- nj(louse.JC)
g <- nj(gopher.JC)
op <- par(no.readonly = TRUE)
g$tip.label <- paste(1:8, g.names)
l$tip.label <- paste(1:8, l.names)
layout(matrix(data = 1:2, nrow = 1, ncol = 2), width=c(1.4, 1))
par(mar=c(2,1,2,1))
plot(g, adj = 0.8, cex = 1.4, use.edge.length=FALSE,main = "gopher (host)", cex.main = 2)
plot(l,direction="l", use.edge.length=FALSE, cex = 1.4,main = "louse (parasite)", cex.main = 2)
g$tip.label <- paste(1:8, g.names)
l$tip.label <- paste(1:8, l.names)
layout(matrix(data = 1:2, nrow = 1, ncol = 2), width=c(1.4, 1))
par(mar=c(2,1,2,1))
plot(g, adj = 0.8, cex = 1.4, use.edge.length=FALSE,main = "gopher (host)", cex.main = 2)
plot(l,direction="l", use.edge.length=FALSE, cex = 1.4,main = "louse (parasite)", cex.main = 2)
g$tip.label <- paste(1:8, g.names)
l$tip.label <- paste(1:8, l.names)
layout(matrix(data = 1:2, nrow = 1, ncol = 2), width=c(1.4, 1))
par(mar=c(2,1,2,1))
plot(g, adj = 0.8, cex = 1.4, use.edge.length=FALSE,main = "gopher (host)", cex.main = 2)
plot(l,direction="l", use.edge.length=FALSE, cex = 1.4,main = "louse (parasite)", cex.main = 2)
par(op)
source("essai.r")
source("essai.r")
runApp('Project_App_1.R')
runApp('Project_App_1.R')
runApp('Project_App_1.R')
runApp('Project_App_1.R')
runApp('Project_App_1.R')
runApp('Project_App_1.R')
runApp('Project_App_1.R')
runApp('Project_App_1.R')
runApp('Project_App_1.R')
