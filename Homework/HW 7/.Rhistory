selectInput("Campus", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("Ethnicity", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("Category", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
mainPanel(
plotOutput("plot")
)
)
)
runApp('Admissions_by_Campus_Ethnicity_Category.R')
runApp('Admissions_Focus_Ethnicity.R')
runApp('Admissions_by_Campus_Ethnicity_Category.R')
knitr::opts_chunk$set(echo = TRUE)
goose <- readr::read_csv("data/Goose_data_2019.csv")
library(tidyverse)
library(naniar)
library(shiny)
library(shinydashboard)
View(goose)
dim(goose)
glimpse(goose)
goose %>%
naniar::miss_var_summary()
View(goose)
names(goose)<-gsub("\\s","_",names(goose))
goose %>%
mutate_at(vars(Band_Number,Species,Common_Name,Age,Sex,Bander_ID,Location,How_Captured,Transmitter_Affixed,Cloacal_Swap,Blood_Sample_Taken),as.factor())
goose %>%
mutate_at(vars(Band_Number,Species,Common_Name,Age,Sex,Bander_ID,Location,How_Captured,Transmitter_Affixed,Cloacal_Swab,Blood_Sample_Taken),as.factor())
goose %>%
mutate_at(vars(Band_Number,Species,Common_Name,Age,Sex,Bander_ID,Location,How_Captured,Transmitter_Affixed,Cloacal_Swab,Blood_Sample_Taken), as.factor
goose %>%
mutate_at(vars(Band_Number,Species,Common_Name,Age,Sex,Bander_ID,Location,How_Captured,Transmitter_Affixed,Cloacal_Swab,Blood_Sample_Taken), as.factor)
names(goose)<-gsub("\\s","_",names(goose))#Put_in names
names(goose)<-gsub("#","Number",names(goose))
goose %>%
mutate_at(vars(Band_Number,Species,Common_Name,Age,Sex,Bander_ID,Location,How_Captured,Transmitter_Affixed,Cloacal_Swab,Blood_Sample_Taken), as.factor)
goose %>%
mutate_at(vars(Band_Number,Species,Common_Name,Age,Sex,Bander_ID,Location,How_Captured,Transmitter_Affixed,Cloacal_Swab,Blood_Sample_Taken, Transmitter_ID,Aux_Marker_Type,Season), as.factor)
ui <- fluidPage(
titlePanel("Goose Data across the Seasons"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("Common_Name", "Select a Goose Species:",
choices=unique(homerange$Common_Name)),
selectInput("Measure", "Select a Measurement", choices = c("Wing_Chord", "Bird_Weight", "Tarsus_Length", "Culmen_Length", "Bill_Width", "Bill_Height"),
selected = "Wing_Chord"),
hr(),
helpText("Credit: Goose data collected by A. Mott")
),
# create a spot for the barplot
mainPanel(
plotOutput("goosePlot")
)
)
)
ui <- fluidPage(
titlePanel("Goose Data across the Seasons"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("Common_Name", "Select a Goose Species:",
choices=unique(goose$Common_Name)),
selectInput("Measure", "Select a Measurement", choices = c("Wing_Chord", "Bird_Weight", "Tarsus_Length", "Culmen_Length", "Bill_Width", "Bill_Height"),
selected = "Wing_Chord"),
hr(),
helpText("Credit: Goose data collected by A. Mott")
),
# create a spot for the barplot
mainPanel(
plotOutput("goosePlot")
)
)
)
# define a server for the Shiny app
server <- function(input, output) {
# fill in the spot we created for a plot
output$goosePlot <- renderPlot({
goose %>%
filter(Common_Name == input$Common_Name) %>%
ggplot(aes(x=Season, y=input$Measure)) +
geom_bar(stat = "identity", color="black", fill="red2")
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Goose Data across the Seasons"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("Common_Name", "Select a Goose Species:",
choices=unique(goose$Common_Name)),
selectInput("Measure", "Select a Measurement", choices = c("Wing_Chord", "Bird_Weight", "Tarsus_Length", "Culmen_Length", "Bill_Width", "Bill_Height"),
selected = "Wing_Chord"),
hr(),
helpText("Credit: Goose data collected by A. Mott")
),
# create a spot for the barplot
mainPanel(
plotOutput("goosePlot")
)
)
)
# define a server for the Shiny app
server <- function(input, output) {
# fill in the spot we created for a plot
output$goosePlot <- renderPlot({
goose %>%
filter(Common_Name == input$Common_Name) %>%
ggplot(aes(x=Season, y=input$Measure)) +
geom_bar(stat = "identity", fill="red2")
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Goose Data across the Seasons"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("Common_Name", "Select a Goose Species:",
choices=unique(goose$Common_Name)),
selectInput("Measure", "Select a Measurement", choices = c("Wing_Chord", "Bird_Weight", "Tarsus_Length", "Culmen_Length", "Bill_Width", "Bill_Height"),
selected = "Wing_Chord"),
hr(),
helpText("Credit: Goose data collected by A. Mott")
),
# create a spot for the barplot
mainPanel(
plotOutput("goosePlot")
)
)
)
# define a server for the Shiny app
server <- function(input, output, session) {
# fill in the spot we created for a plot
output$goosePlot <- renderPlot({
goose %>%
filter(Common_Name == input$Common_Name) %>%
ggplot(aes(x=Season, y=input$Measure)) +
geom_(stat = "identity", fill="red2")
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Goose Data across the Seasons"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("Common_Name", "Select a Goose Species:",
choices=unique(goose$Common_Name)),
selectInput("Measure", "Select a Measurement", choices = c("Wing_Chord", "Bird_Weight", "Tarsus_Length", "Culmen_Length", "Bill_Width", "Bill_Height"),
selected = "Wing_Chord"),
hr(),
helpText("Credit: Goose data collected by A. Mott")
),
# create a spot for the barplot
mainPanel(
plotOutput("goosePlot")
)
)
)
# define a server for the Shiny app
server <- function(input, output, session) {
# fill in the spot we created for a plot
output$goosePlot <- renderPlot({
goose %>%
filter(Common_Name == input$Common_Name) %>%
ggplot(aes(x=Season, y=input$Measure)) +
geom_bar(stat = "identity", fill="red2")
})
}
shinyApp(ui, server)
goose_mean <- goose %>%
group_by(Common_Name, Season)
summarize(Wing_Chord = mean(Wing_Chord, na.rm=T),
Bird_Weight = mean(Bird_Weight, na.rm=T),
Tarsus_Length = mean(Tarsus_Length, na.rm=T),
Culmen_Length = mean(Culmen_Length, na.rm=T),
Bill_Width = mean(Bill_Width, na.rm=T),
Bill_Height = mean(Bill_Height, na.rm=T))
goose_mean <- goose %>%
group_by(Common_Name, Season) %>%
summarize(Wing_Chord = mean(Wing_Chord, na.rm=T),
Bird_Weight = mean(Bird_Weight, na.rm=T),
Tarsus_Length = mean(Tarsus_Length, na.rm=T),
Culmen_Length = mean(Culmen_Length, na.rm=T),
Bill_Width = mean(Bill_Width, na.rm=T),
Bill_Height = mean(Bill_Height, na.rm=T))
goose %>%
mutate_at(vars(Wing_Chord, Bird_Weight, Tarsus_Length, Culmen_Length, Bill_Width, Bill_Height), as.numeric)
goose_mean <- goose %>%
group_by(Common_Name, Season) %>%
summarize(Wing_Chord = mean(Wing_Chord, na.rm=T),
Bird_Weight = mean(Bird_Weight, na.rm=T),
Tarsus_Length = mean(Tarsus_Length, na.rm=T),
Culmen_Length = mean(Culmen_Length, na.rm=T),
Bill_Width = mean(Bill_Width, na.rm=T),
Bill_Height = mean(Bill_Height, na.rm=T))
goose_mean <- goose %>%
group_by(Common_Name, Season) %>%
summarize(Wing__Chord = mean(Wing_Chord, na.rm=T),
Bird__Weight = mean(Bird_Weight, na.rm=T),
Tarsus__Length = mean(Tarsus_Length, na.rm=T),
Culmen__Length = mean(Culmen_Length, na.rm=T),
Bill__Width = mean(Bill_Width, na.rm=T),
Bill__Height = mean(Bill_Height, na.rm=T))
goose %>%
group_by(Common_Name, Season) %>%
summarize(Wing__Chord = mean(Wing_Chord, na.rm=T),
Bird__Weight = mean(Bird_Weight, na.rm=T),
Tarsus__Length = mean(Tarsus_Length, na.rm=T),
Culmen__Length = mean(Culmen_Length, na.rm=T),
Bill__Width = mean(Bill_Width, na.rm=T),
Bill__Height = mean(Bill_Height, na.rm=T))
goose %>%
group_by(Common_Name, Season) %>%
summarize(Wing__Chord = mean(Wing_Chord, na.rm=T),
Bird__Weight = mean(Bird_Weight, na.rm=T),
Tarsus__Length = mean(Tarsus_Length, na.rm=T),
Culmen__Length = mean(Culmen_Length, na.rm=T),
Bill__Width = mean(Bill_Width, na.rm=T),
Bill__Height = mean(Bill_Height, na.rm=T))
goose <- goose %>%
mutate_at(vars(Band_Number,Species,Common_Name,Age,Sex,Bander_ID,Location,How_Captured,Transmitter_Affixed,Cloacal_Swab,Blood_Sample_Taken, Transmitter_ID,Aux_Marker_Type,Season), as.factor)
names(goose)<-gsub("\\s","_",names(goose))#Put_in names
names(goose)<-gsub("#","Number",names(goose))
goose <- goose %>%
mutate_at(vars(Band_Number,Species,Common_Name,Age,Sex,Bander_ID,Location,How_Captured,Transmitter_Affixed,Cloacal_Swab,Blood_Sample_Taken, Transmitter_ID,Aux_Marker_Type,Season), as.factor)
goose <- goose %>%
mutate_at(vars(Band_Number,Species,Common_Name,Age,Sex,Bander_ID,Location,How_Captured,Transmitter_Affixed,Cloacal_Swab,Blood_Sample_Taken, Transmitter_ID,Aux_Marker_Type,Season), as.factor)
goose <- goose %>%
mutate_at(vars(Wing_Chord, Bird_Weight, Tarsus_Length, Culmen_Length, Bill_Width, Bill_Height), as.numeric)
goose %>%
group_by(Common_Name, Season) %>%
summarize(Wing__Chord = mean(Wing_Chord, na.rm=T),
Bird__Weight = mean(Bird_Weight, na.rm=T),
Tarsus__Length = mean(Tarsus_Length, na.rm=T),
Culmen__Length = mean(Culmen_Length, na.rm=T),
Bill__Width = mean(Bill_Width, na.rm=T),
Bill__Height = mean(Bill_Height, na.rm=T))
goose_mean <- goose %>%
group_by(Common_Name, Season) %>%
summarize(Wing__Chord = mean(Wing_Chord, na.rm=T),
Bird__Weight = mean(Bird_Weight, na.rm=T),
Tarsus__Length = mean(Tarsus_Length, na.rm=T),
Culmen__Length = mean(Culmen_Length, na.rm=T),
Bill__Width = mean(Bill_Width, na.rm=T),
Bill__Height = mean(Bill_Height, na.rm=T))
ui <- fluidPage(
titlePanel("Goose Data across the Seasons"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("Common_Name", "Select a Goose Species:",
choices=unique(goose_mean$Common_Name)),
selectInput("Measure", "Select a Measurement", choices = c("Wing__Chord", "Bird__Weight", "Tarsus__Length", "Culmen__Length", "Bill__Width", "Bill__Height"),
selected = "Wing_Chord"),
hr(),
helpText("Credit: Goose data collected by A. Mott")
),
# create a spot for the barplot
mainPanel(
plotOutput("goosePlot")
)
)
)
# define a server for the Shiny app
server <- function(input, output, session) {
# fill in the spot we created for a plot
output$goosePlot <- renderPlot({
goose_mean %>%
filter(Common_Name == input$Common_Name) %>%
ggplot(aes(x=Season, y=input$Measure)) +
geom_bar(stat = "identity", fill="red2")
})
}
shinyApp(ui, server)
goose_mean <- goose %>%
group_by(Common_Name, Season) %>%
summarize(Wing__Chord = mean(Wing_Chord, na.rm=T),
Bird__Weight = mean(Bird_Weight, na.rm=T),
Tarsus__Length = mean(Tarsus_Length, na.rm=T),
Culmen__Length = mean(Culmen_Length, na.rm=T),
Bill__Width = mean(Bill_Width, na.rm=T),
Bill__Height = mean(Bill_Height, na.rm=T))
goose_mean
goose_mean <- goose %>%
group_by(Common_Name, Sex) %>%
summarize(Wing__Chord = mean(Wing_Chord, na.rm=T),
Bird__Weight = mean(Bird_Weight, na.rm=T),
Tarsus__Length = mean(Tarsus_Length, na.rm=T),
Culmen__Length = mean(Culmen_Length, na.rm=T),
Bill__Width = mean(Bill_Width, na.rm=T),
Bill__Height = mean(Bill_Height, na.rm=T))
goose_mean
ui <- fluidPage(
titlePanel("Goose Data by Sex"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("Common_Name", "Select a Goose Species:",
choices=unique(goose_mean$Common_Name)),
selectInput("Measure", "Select a Measurement", choices = c("Wing__Chord", "Bird__Weight", "Tarsus__Length", "Culmen__Length", "Bill__Width", "Bill__Height"),
selected = "Wing_Chord"),
hr(),
helpText("Credit: Goose data collected by A. Mott")
),
# create a spot for the barplot
mainPanel(
plotOutput("goosePlot")
)
)
)
# define a server for the Shiny app
server <- function(input, output, session) {
# fill in the spot we created for a plot
output$goosePlot <- renderPlot({
goose_mean %>%
filter(Common_Name == input$Common_Name) %>%
ggplot(aes(x=Sex, y=input$Measure)) +
geom_bar(stat = "identity", fill="red2")
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Goose Data by Sex"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("Common_Name", "Select a Goose Species:",
choices=unique(goose_mean$Common_Name)),
selectInput("Measure", "Select a Measurement", choices = c("Wing__Chord", "Bird__Weight", "Tarsus__Length", "Culmen__Length", "Bill__Width", "Bill__Height"),
selected = "Wing_Chord"),
hr(),
helpText("Credit: Goose data collected by A. Mott")
),
# create a spot for the barplot
mainPanel(
plotOutput("goosePlot")
)
)
)
# define a server for the Shiny app
server <- function(input, output, session) {
# fill in the spot we created for a plot
output$goosePlot <- renderPlot({
goose_mean %>%
filter(Common_Name == input$Common_Name) %>%
ggplot(aes(x=Sex, y=input$Measure)) +
geom_bar(stat = "identity", fill="red2")
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Goose Data by Sex"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("Common_Name", "Select a Goose Species:",
choices=unique(goose_mean$Common_Name)),
selectInput("Measure", "Select a Measurement", choices = c("Wing__Chord", "Bird__Weight", "Tarsus__Length", "Culmen__Length", "Bill__Width", "Bill__Height"),
selected = "Wing__Chord"),
hr(),
helpText("Credit: Goose data collected by A. Mott")
),
# create a spot for the barplot
mainPanel(
plotOutput("goosePlot")
)
)
)
# define a server for the Shiny app
server <- function(input, output, session) {
# fill in the spot we created for a plot
output$goosePlot <- renderPlot({
goose_mean %>%
filter(Common_Name == input$Common_Name) %>%
ggplot(aes(x=Sex, y=input$Measure)) +
geom_bar(stat = "identity", fill="red2")
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Goose Data by Sex"),
sidebarLayout(
sidebarPanel(
selectInput("Common_Name", "Select a Goose Species:",
choices=unique(goose_mean$Common_Name)),
selectInput("Measure", "Select a Measurement", choices = c("Wing__Chord", "Bird__Weight", "Tarsus__Length", "Culmen__Length", "Bill__Width", "Bill__Height"),
selected = "Wing__Chord"),
hr(),
helpText("Credit: Goose data collected by A. Mott")
),
mainPanel(
plotOutput("goosePlot")
)
)
)
server <- function(input, output, session) {
output$goosePlot <- renderPlot({
goose_mean %>%
filter(Common_Name == input$Common_Name) %>%
ggplot(aes(x=Sex, y=input$Measure)) +
geom_bar(stat = "identity", fill="red2")
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Goose Data by Sex"),
sidebarLayout(
sidebarPanel(
selectInput("Common_Name", "Select a Goose Species:",
choices=unique(goose_mean$Common_Name)),
selectInput("Measure", "Select a Measurement", choices = c("Wing__Chord", "Bird__Weight", "Tarsus__Length", "Culmen__Length", "Bill__Width", "Bill__Height"),
selected = "Wing__Chord"),
hr(),
helpText("Credit: Goose data collected by A. Mott")
),
mainPanel(
plotOutput("goosePlot")
)
)
)
server <- function(input, output, session) {
output$goosePlot <- renderPlot({
goose_mean %>%
filter(Common_Name == input$Common_Name) %>%
ggplot(aes(x=Sex, y=Measure)) +
geom_bar(stat = "identity", fill="red2")
})
}
shinyApp(ui, server)
goose_mean <- goose %>%
group_by(Common_Name, Sex) %>%
summarize(Wing__Chord = mean(Wing_Chord, na.rm=T),
Bird__Weight = mean(Bird_Weight, na.rm=T),
Tarsus__Length = mean(Tarsus_Length, na.rm=T),
Culmen__Length = mean(Culmen_Length, na.rm=T),
Bill__Width = mean(Bill_Width, na.rm=T),
Bill__Height = mean(Bill_Height, na.rm=T)) %>%
pivot_longer(Wing__Chord:Bill_Height,
names_to = "Measure",
values_to = "Value")
goose_mean <- goose %>%
group_by(Common_Name, Sex) %>%
summarize(Wing__Chord = mean(Wing_Chord, na.rm=T),
Bird__Weight = mean(Bird_Weight, na.rm=T),
Tarsus__Length = mean(Tarsus_Length, na.rm=T),
Culmen__Length = mean(Culmen_Length, na.rm=T),
Bill__Width = mean(Bill_Width, na.rm=T),
Bill__Height = mean(Bill_Height, na.rm=T)) %>%
pivot_longer(Wing__Chord:Bill__Height,
names_to = "Measure",
values_to = "Value")
goose_mean
ui <- fluidPage(
titlePanel("Goose Data by Sex"),
sidebarLayout(
sidebarPanel(
selectInput("Common_Name", "Select a Goose Species:",
choices=unique(goose_mean$Common_Name)),
selectInput("Measure", "Select a Measurement",
choices = unique(goose_mean$Measure),
hr(),
helpText("Credit: Goose data collected by A. Mott")
),
mainPanel(
plotOutput("goosePlot")
)
)
)
)
ui <- fluidPage(
titlePanel("Goose Data by Sex"),
sidebarLayout(
sidebarPanel(
selectInput("Common_Name", "Select a Goose Species:",
choices=unique(goose_mean$Common_Name)),
selectInput("Measure", "Select a Measurement",
choices = unique(goose_mean$Measure)),
hr(),
helpText("Credit: Goose data collected by A. Mott")
),
mainPanel(
plotOutput("goosePlot")
)
)
)
server <- function(input, output, session) {
output$goosePlot <- renderPlot({
goose_mean %>%
filter(Common_Name == input$Common_Name & Measure == input$Measure) %>%
ggplot(aes(x=Sex, y=Value)) +
geom_bar(stat = "identity", fill="red2")
})
}
shinyApp(ui, server)
