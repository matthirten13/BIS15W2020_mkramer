}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions stats"),
dashboardSidebar(),
dashboardBody()
)
fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Ethnicity"),
selected = "Ethnicity"),
plotOutput("plot", width = "1000px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Academic_Yr", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = count, position = "dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions stats"),
dashboardSidebar(),
dashboardBody()
)
fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Ethnicity"),
selected = "Ethnicity"),
plotOutput("plot", width = "1000px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Academic_Yr", y = "FilteredCountFR", fill = input$x)) +
geom_point(stat = count, position = "dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions stats"),
dashboardSidebar(),
dashboardBody()
)
fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Ethnicity"),
selected = "Ethnicity"),
plotOutput("plot", width = "1000px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Academic_Yr", y = "FilteredCountFR", fill = input$x)) +
geom_point(position = "dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions stats"),
dashboardSidebar(),
dashboardBody(
fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Ethnicity"),
selected = "Ethnicity"),
plotOutput("plot", width = "1000px", height = "400px"))
)
server <- function(input, output, session) {
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions stats"),
dashboardSidebar(),
dashboardBody(
)
fluidPage(
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Ethnicity"),
selected = "Ethnicity"),
plotOutput("plot", width = "1000px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Academic_Yr", y = "FilteredCountFR", fill = input$x)) +
geom_point(position = "dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Ethnicity"),
selected = "Ethnicity"),
plotOutput("plot", width = "1000px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Academic_Yr", y = "FilteredCountFR", fill = input$x)) +
geom_bar(position = "dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Ethnicity"),
selected = "Ethnicity"),
plotOutput("plot", width = "1000px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Academic_Yr", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Ethnicity"),
selected = "Ethnicity"),
plotOutput("plot", width = "1000px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Academic_Yr", y = "Ethinicity", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Ethnicity"),
selected = "Ethnicity"),
plotOutput("plot", width = "1000px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Academic_Yr", y = "Ethnicity", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "1000px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "FilteredCountFR", y = "Ethnicity", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "1000px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Ethnicity", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "1000px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Ethnicity", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "800px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Ethnicity", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "800px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Ethnicity", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1), axis.text = element_text(size = 18), axis.title = element_text(size=18))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "800px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Ethnicity", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1)
})
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "800px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Ethnicity", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1), axis.text = element_text(size = 18), axis.title = element_text(size=18))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
tabsetPanel(
tabPanel("tab 1", "contents"),
tabPanel("tab 2", "contents"),
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "800px", height = "400px")))
)
server <- function(input, output, session) {
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
tabsetPanel(
tabPanel("tab 1", "contents"),
tabPanel("tab 2", "contents"))
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "800px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Ethnicity", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1), axis.text = element_text(size = 18), axis.title = element_text(size=18))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(),
dashboardBody(fluidPage(navlistPanel(
tabPanel("tab 1", "contents"),
tabPanel("tab 2", "contents"),
tabPanel("tab 3", "contents")))
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(),
dashboardBody(fluidPage(navlistPanel(
tabPanel("tab 1", "contents"),
tabPanel("tab 2", "contents"),
tabPanel("tab 3", "contents"))
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(),
dashboardBody(fluidPage(navlistPanel(
tabPanel("tab 1", "contents"),
tabPanel("tab 2", "contents"),
tabPanel("tab 3", "contents"),
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "800px", height = "400px")))
)
server <- function(input, output, session) {
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(),
dashboardBody(fluidPage(navlistPanel(
tabPanel("tab 1", "contents"),
tabPanel("tab 2", "contents"),
tabPanel("tab 3", "contents"))
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(),
dashboardBody(fluidPage(navlistPanel(
tabPanel("tab 1", "contents"),
tabPanel("tab 2", "contents"),
tabPanel("tab 3", "contents")),
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "800px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Ethnicity", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1), axis.text = element_text(size = 18), axis.title = element_text(size=18))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(navlistPanel(
tabPanel("tab 1", "contents"),
tabPanel("tab 2", "contents"),
tabPanel("tab 3", "contents"))),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "800px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Ethnicity", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1), axis.text = element_text(size = 18), axis.title = element_text(size=18))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(navlistPanel(
tabPanel("tab 1", "Category"),
tabPanel("tab 2", "Campus"),
tabPanel("tab 3", "Academic Year"))),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "800px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Ethnicity", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1), axis.text = element_text(size = 18), axis.title = element_text(size=18))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(navlistPanel(
tabPanel("tab 1", "Lab 7/runapp.png"),
tabPanel("tab 2", "Campus"),
tabPanel("tab 3", "Academic Year"))),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "800px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Ethnicity", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1), axis.text = element_text(size = 18), axis.title = element_text(size=18))
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(navlistPanel(
tabPanel("tab 1", "R Things/BIS15W2020_amott/Lab 7/runapp.png"),
tabPanel("tab 2", "Campus"),
tabPanel("tab 3", "Academic Year"))),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "800px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Ethnicity", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1), axis.text = element_text(size = 18), axis.title = element_text(size=18))
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(navlistPanel(
tabPanel("tab 1", "![Alt text] (/Desktop/R Things/BIS15W2020_amott/Lab 7/runapp.png)"),
tabPanel("tab 2", "Campus"),
tabPanel("tab 3", "Academic Year"))),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "800px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Ethnicity", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1), axis.text = element_text(size = 18), axis.title = element_text(size=18))
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(navlistPanel(
tabPanel("tab 1", ![Alt text] (/Home/Desktop/R Things/BIS15W2020_amott/Lab 7/runapp.png)),
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(navlistPanel(
tabPanel("tab 1", ![Alt text] ("/Home/Desktop/R Things/BIS15W2020_amott/Lab 7/runapp.png")),
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(navlistPanel(
tabPanel("tab 1", ![Alt text] ("/Desktop/R Things/BIS15W2020_amott/Lab 7/runapp.png")),
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Ethnicity Stats"),
dashboardSidebar(),
dashboardBody(fluidPage(
selectInput("x", "Select X Variable", choices = c("Category", "Campus", "Academic_Yr"),
selected = "Ethnicity"),
plotOutput("plot", width = "800px", height = "400px")))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit2, aes_string(x = "Ethnicity", y = "FilteredCountFR", fill = input$x)) +
geom_bar(stat = "identity", position = "dodge") +
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1), axis.text = element_text(size = 18), axis.title = element_text(size=18))
})
}
shinyApp(ui, server)
shinyApp(ui, server)
install.packages("shiny")
library(shiny); runApp('UC Admissions App.R')
runApp('UC Admissions App.R')
runApp('~/Desktop/BIS15W2020_mkramer/Homework/HW 7/Admissions_by_Campus_Ethnicity_Category.R')
runApp('~/Desktop/BIS15W2020_mkramer/Homework/HW 7/Admissions_Focus_Ethnicity.R')
runApp('~/Desktop/BIS15W2020_mkramer/Homework/HW 7/Admissions_by_Campus_Ethnicity_Category.R')
