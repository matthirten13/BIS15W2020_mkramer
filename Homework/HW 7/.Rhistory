library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("Campus", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("Ethnicity", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("Category", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "800px", height = "500px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
filter(UC_admit, Campus == input$Campus & Ethnicity == input$Ethnicity & Category == input$Category)
})
output$plot <- renderPlot({
ggplot(UC_filt, aes_string(x = UC_filt$Academic_Yr, y = UC_filt$FilteredCountFR))+
geom_density(stat = "identity")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("Campus", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("Ethnicity", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("Category", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "4px", height = "200px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
filter(UC_admit(), Campus == input$Campus & Ethnicity == input$Ethnicity & Category == input$Category)
})
output$plot <- renderPlot({
ggplot(UC_filt, aes_string(x = UC_filt$Academic_Yr, y = UC_filt$FilteredCountFR))+
geom_density(stat = "identity")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("Campus", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("Ethnicity", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("Category", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "4px", height = "200px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
filter(UC_admit(), Campus == input$Campus & Ethnicity == input$Ethnicity & Category == input$Category)
})
output$plot <- renderPlot({
ggplot(UC_filt, aes_string(x = UC_filt$Academic_Yr, y = UC_filt$FilteredCountFR))+
geom_density(stat = "identity")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("Campus", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("Ethnicity", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("Category", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "400px", height = "200px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
filter(UC_admit(), Campus == input$Campus & Ethnicity == input$Ethnicity & Category == input$Category)
})
output$plot <- renderPlot({
ggplot(UC_filt(), aes_string(x = UC_filt$Academic_Yr, y = UC_filt$FilteredCountFR))+
geom_density(stat = "identity")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("Campus", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("Ethnicity", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("Category", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "400px", height = "200px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
filter(UC_admit, Campus == input$Campus & Ethnicity == input$Ethnicity & Category == input$Category)
})
output$plot <- renderPlot({
ggplot(UC_filt(), aes_string(x = UC_filt$Academic_Yr, y = UC_filt$FilteredCountFR))+
geom_density(stat = "identity")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("Campus", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("Ethnicity", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("Category", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "400px", height = "200px"),
UC_filt <- reactive({
filter(UC_admit, Campus == input$Campus & Ethnicity == input$Ethnicity & Category == input$Category)
})
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(UC_filt, aes_string(x = UC_filt$Academic_Yr, y = UC_filt$FilteredCountFR))+
geom_density(stat = "identity")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("Campus", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("Ethnicity", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("Category", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "400px", height = "200px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
filter(UC_admit, Campus == "input$Campus" & Ethnicity == "input$Ethnicity" & Category == "input$Category")
})
output$plot <- renderPlot({
ggplot(UC_filt(), aes_string(x = UC_filt$Academic_Yr, y = UC_filt$FilteredCountFR))+
geom_density(stat = "identity")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("Campus", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("Ethnicity", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("Category", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "400px", height = "200px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
UC_admit %>% filter(Campus == input$Campus & Ethnicity == input$Ethnicity & Category == input$Category)
})
output$plot <- renderPlot({
ggplot(UC_filt(), aes_string(x = UC_filt$Academic_Yr, y = UC_filt$FilteredCountFR))+
geom_density(stat = "identity")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("Campus", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("Ethnicity", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("Category", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "400px", height = "200px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
UC_admit %>% filter(Campus == input$Campus & Ethnicity == input$Ethnicity & Category == input$Category)
})
output$plot <- renderPlot({
UC_fin <- UC_filt()
ggplot(UC_filt, aes_string(x = UC_filt$Academic_Yr, y = UC_filt$FilteredCountFR))+
geom_density(stat = "identity")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("x", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("y", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("z", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "400px", height = "200px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
UC_admit %>% filter(Campus == input$x & Ethnicity == input$y & Category == input$z)
})
output$plot <- renderPlot({
UC_fin <- UC_filt()
ggplot(UC_filt, aes_string(x = UC_filt$Academic_Yr, y = UC_filt$FilteredCountFR))+
geom_density(stat = "identity")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("x", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("y", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("z", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "400px", height = "200px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
UC_admit %>% filter(Campus == input$x & Ethnicity == input$y & Category == input$z)
})
output$plot <- renderPlot({
UC_fin <- UC_filt()
ggplot(UC_fin, aes_string(x = UC_filt$Academic_Yr, y = UC_filt$FilteredCountFR))+
geom_density(stat = "identity")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("x", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("y", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("z", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "400px", height = "200px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
UC_admit %>% filter(Campus == input$x & Ethnicity == input$y & Category == input$z)
})
output$plot <- renderPlot({
UC_fin <- UC_filt()
ggplot(UC_fin, aes_string(x = UC_fin$Academic_Yr, y = UC_fin$FilteredCountFR))+
geom_density(stat = "identity")
})
}
shinyApp(ui, server)
UC_admit$Academic_Yr <- as.factor(UC_admit$Academic_Yr)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("x", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("y", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("z", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "400px", height = "200px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
UC_admit %>% filter(Campus == input$x & Ethnicity == input$y & Category == input$z)
})
output$plot <- renderPlot({
UC_fin <- UC_filt()
ggplot(UC_fin, aes_string(x = UC_fin$Academic_Yr, y = UC_fin$FilteredCountFR))+
geom_bar(stat = "identity")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("x", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("y", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("z", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "400px", height = "600px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
UC_admit %>% filter(Campus == input$x & Ethnicity == input$y & Category == input$z)
})
output$plot <- renderPlot({
UC_fin <- UC_filt()
ggplot(UC_fin, aes_string(x = UC_fin$Academic_Yr, y = UC_fin$FilteredCountFR))+
geom_bar()
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("x", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("y", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("z", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "600px", height = "400px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
UC_admit %>% filter(Campus == input$x & Ethnicity == input$y & Category == input$z)
})
output$plot <- renderPlot({
UC_fin <- UC_filt()
ggplot(UC_fin, aes_string(x = UC_fin$Academic_Yr, y = UC_fin$FilteredCountFR))+
geom_bar(stat = "identity")
})
}
shinyApp(ui, server)
UC_admit$Academic_Yr <- as.integer(UC_admit$Academic_Yr)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("x", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("y", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("z", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "600px", height = "400px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
UC_admit %>% filter(Campus == input$x & Ethnicity == input$y & Category == input$z)
})
output$plot <- renderPlot({
UC_fin <- UC_filt()
ggplot(UC_fin, aes_string(x = UC_fin$Academic_Yr, y = UC_fin$FilteredCountFR))+
geom_bar(stat = "identity")
})
}
shinyApp(ui, server)
UC_admit$Academic_Yr <- as.factor(UC_admit$Academic_Yr)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("x", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("y", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("z", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
plotOutput("plot", width = "600px", height = "400px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
UC_admit %>% filter(Campus == input$x & Ethnicity == input$y & Category == input$z)
})
output$plot <- renderPlot({
UC_fin <- UC_filt()
ggplot(UC_fin, aes_string(x = UC_fin$Academic_Yr, y = UC_fin$FilteredCountFR))+
geom_bar(stat = "identity")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("x", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("y", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("z", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
mainPanel(
plotOutput("plot", width = "600px", height = "400px")
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
UC_admit %>% filter(Campus == input$x & Ethnicity == input$y & Category == input$z)
})
output$plot <- renderPlot({
UC_fin <- UC_filt()
ggplot(UC_fin, aes_string(x = UC_fin$Academic_Yr, y = UC_fin$FilteredCountFR))+
geom_bar(stat = "identity")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("UC Campus Admissions 2010-2019"),
sidebarPanel(
selectInput("x", "Filter by Campus:",
choices=unique(UC_admit$Campus)),
selectInput("y", "Filter by Ethnicity:",
choices=unique(UC_admit$Ethnicity)),
selectInput("z", "Filter by Admit Category:",
choices=unique(UC_admit$Category)),
hr(),
helpText("Reference: University of California Information Center")
),
mainPanel(
plotOutput("plot", width = "600px", height = "400px")
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
UC_filt <- reactive({
UC_admit %>% filter(Campus == input$x & Ethnicity == input$y & Category == input$z)
})
output$plot <- renderPlot({
UC_fin <- UC_filt()
ggplot(UC_fin, aes_string(x = Academic_Yr, y = FilteredCountFR))+
geom_bar(stat = "identity")
})
}
shinyApp(ui, server)
